{"version":3,"sources":["toDo.js","toDoForm.js","App.js","reportWebVitals.js","index.js"],"names":["ToDo","todo","toggleTask","removeTask","className","complete","onClick","id","task","ToDoForm","addTask","useState","userInput","setUserInput","handleSubmit","e","preventDefault","onSubmit","value","type","onChange","currentTarget","onKeyDown","key","placeholder","App","todos","setTodos","filter","handleToggle","map","length","newItem","Math","random","toString","substr","imageUrl","name","count","size","width","height","weight","comments","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAeeA,MAff,YAA4C,IAA7BC,EAA4B,EAA5BA,KAAKC,EAAuB,EAAvBA,WAAWC,EAAY,EAAZA,WAC3B,OACA,sBAAmBC,UAAU,YAA7B,UACI,qBAAKA,UAAWH,EAAKI,SAAW,mBAAmB,YAC/CC,QAAS,kBAAKJ,EAAWD,EAAKM,KADlC,SAGKN,EAAKO,OAEV,qBAAKJ,UAAU,cAAcE,QAAS,kBAAMH,EAAWF,EAAKM,KAA5D,iBANMN,EAAKM,KCiCJE,MAlCf,YAA6B,IAAVC,EAAS,EAATA,QACf,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAe,SAACC,GAClBA,EAAEC,iBACFN,EAAQE,GACRC,EAAa,KASjB,OAEI,uBAAMI,SAAYH,EAAlB,UACI,uBACII,MAAON,EACPO,KAAK,OACLC,SAtBS,SAACL,GAClBF,EAAaE,EAAEM,cAAcH,QAsBrBI,UAZW,SAACP,GACP,UAAVA,EAAEQ,KACDT,EAAaC,IAWTS,YAAY,gBAEhB,8CCmCGC,MA5Df,WACE,MAA0Bd,mBAAS,IAAnC,mBAAOe,EAAP,KAAcC,EAAd,KAsBMxB,EAAa,SAACI,GAClBoB,EAAS,YAAID,EAAME,QAAO,SAAC3B,GAAD,OAAUA,EAAKM,IAAMA,QAG3CsB,EAAe,SAACtB,GACpBoB,EAAS,YACJD,EAAMI,KAAI,SAAC7B,GAAD,OACbA,EAAKM,KAAOA,EAAZ,2BAAqBN,GAArB,IAA2BI,UAAWJ,EAAKI,WAA3C,eAA2DJ,SAI/D,OAEE,cADA,CACA,OAAKG,UAAU,MAAf,UACA,iCACE,kDAAqBsB,EAAMK,YAG7B,cAAC,EAAD,CAAUrB,QAtCI,SAACE,GACf,GAAGA,EAAU,CACX,IAAMoB,EAAU,CACdzB,GAAI0B,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAE,GACxC5B,KAAMI,EACNP,UAAS,EACTgC,SAAU,gBACVC,KAAM,eACNC,MAAO,EACPC,KAAM,CACNC,MAAO,IACPC,OAAQ,KAERC,OAAQ,OACRC,SAAU,CAAC,eAAgB,iBAE7BjB,EAAS,GAAD,mBAAKD,GAAL,CAAWM,SAuBpBN,EAAMI,KAAI,SAAC7B,GACV,OACE,cAAC,EAAD,CACAA,KAAMA,EAENC,WAAY2B,EACZ1B,WAAYA,GAFPF,EAAKM,WCvCHsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.399f3ebc.chunk.js","sourcesContent":["function ToDo({todo,toggleTask,removeTask}){\r\n    return (\r\n    <div key={todo.id} className=\"item-todo\">\r\n        <div className={todo.complete ? \"item-text strike\":\"item-text\"}\r\n            onClick={()=> toggleTask(todo.id)}\r\n        >\r\n            {todo.task}\r\n        </div>\r\n        <div className=\"item-delete\" onClick={() => removeTask(todo.id)}>\r\n            x\r\n        </div>\r\n    </div>\r\n    ) \r\n}\r\n\r\nexport default ToDo","import { useState } from \"react\"\r\nfunction ToDoForm({addTask}){\r\n    const [userInput, setUserInput] = useState('')\r\n    \r\n    const handleChange = (e) => {\r\n        setUserInput(e.currentTarget.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        addTask(userInput)\r\n        setUserInput('')\r\n    }\r\n    \r\n\r\n    const handleKeyPress = (e) => {\r\n        if(e.key === \"Enter\"){\r\n            handleSubmit(e)\r\n        }\r\n    }\r\n    return (\r\n\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                value={userInput}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyPress}\r\n                placeholder=\"add product\"\r\n            />\r\n            <button>Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ToDoForm","import{useState} from 'react'\nimport ToDo from './toDo'\nimport ToDoForm from './toDoForm'\n\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n\n  const addTask = (userInput) =>{\n    if(userInput){\n      const newItem = {\n        id: Math.random().toString(36).substr(2,9),\n        task: userInput,\n        complete:false,\n        imageUrl: \"some url here\",\n        name: \"Product name\",\n        count: 4,\n        size: {\n        width: 200,\n        height: 200\n        },\n        weight: \"200g\",\n        comments: [\"CommentModel\", \"CommentModel\"]\n      }\n      setTodos([...todos,newItem])\n    }\n  }\n\n  const removeTask = (id)=> {\n    setTodos([...todos.filter((todo) => todo.id != id)])\n  }\n\n  const handleToggle = (id) =>{\n    setTodos([\n      ...todos.map((todo) => \n      todo.id === id ? {...todo, complete: !todo.complete} : {...todo})])\n  }\n\n\n  return (\n    // <form className=\"form\" method=\"POST\" action=\"www\" name=\"products list\">\n    <div className=\"App\">\n    <header>\n      <h1> Products list: {todos.length}</h1>\n    </header>\n    \n    <ToDoForm addTask={addTask}/>\n    {todos.map((todo) => {\n      return(\n        <ToDo\n        todo={todo}\n        key={todo.id}\n        toggleTask={handleToggle}\n        removeTask={removeTask}\n        />\n      )\n    })} \n    \n    \n    </div>\n    /* <button className=\"button\" type = \"submit\"> send</button>\n    </form> */\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}